name: Matrix Tests for Orion and IoT-Agent-JSON

on:
  push:
    branches:
      - "418-update-versions-for-fiware-ges"
  workflow_dispatch:

jobs:
  matrix-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        orion_version: ["3.8.0"]
        iot_json_version: ["1.25.0"]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Debug - Verify Repository Structure
        run: |
          pwd
          ls -la

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create .env file
        run: |
          cat <<EOF > .env
          LOG_LEVEL="INFO"
          CB_URL=${{ vars.CB_URL }} # Using stored environment variable
          ORION_LD_URL=${{ vars.ORION_LD_URL }}
          IOTA_JSON_URL=${{ vars.IOTA_JSON_URL }}
          IOTA_UL_URL=${{ vars.IOTA_UL_URL }}
          QL_URL=${{ vars.QL_URL }}
          MQTT_BROKER_URL=${{ vars.MQTT_BROKER_URL }}
          MQTT_BROKER_URL_INTERNAL=${{ vars.MQTT_BROKER_URL_INTERNAL }}
          LD_MQTT_BROKER_URL=${{ vars.LD_MQTT_BROKER_URL }}
          LD_MQTT_BROKER_URL_INTERNAL=${{ vars.LD_MQTT_BROKER_URL_INTERNAL }}
          FIWARE_SERVICE=${{ vars.FIWARE_SERVICE }}
          FIWARE_SERVICEPATH=${{ vars.FIWARE_SERVICEPATH }}
          STATIC_RECORDS=${{ vars.STATIC_RECORDS }}
          EOF

      - name: Verify .env file
        run: cat .env

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install .
          pip install jinja2 pytest

      - name: Generate docker-compose.yml
        run: |
          python generate-compose.py ${{ matrix.orion_version }} ${{ matrix.iot_json_version }}

      - name: Start containers
        run: docker compose up -d

      - name: Wait for FIWARE Services
        run: |
          for i in {1..30}; do
            curl -s http://localhost:1026/version && \
            curl -s http://localhost:1027/version && \
            curl -s http://localhost:4061/version && \
            curl -s http://localhost:4041/version && \
            curl -s http://localhost:8668/version && break || sleep 5
          done

      - name: Run Pytest
        run: |
          python -m unittest tests/clients/test_ngsi_v2_cb.py
          python -m pytest tests

#      - name: Archive test logs
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: logs-Orion=${{ matrix.orion_version }}__IoT=${{ matrix.iot_json_version }}
#          path: result.log

      - name: Tear down containers
        if: always()
        run: docker compose down -v
