name: CI for FiLiP

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install build tools
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          pip install .[development]

      # Step 5: Create .env file
      - name: Create .env file
        run: |
          echo "CB_URL=http://134.130.56.175:1026" > .env
          echo "LD_CB_URL=http://134.130.56.175:1027" >> .env
          echo "IOTA_URL=http://134.130.56.175:4041" >> .env
          echo "QL_URL=http://134.130.56.175:8668" >> .env
          echo "MQTT_BROKER_URL=mqtt://134.130.56.175:1883" >> .env

      # Step 6: Verify .env file
      - name: Verify environment setup
        run: |
          echo "Verifying .env file:"
          cat .env

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install build tools
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # Step 4: Install test dependencies
      - name: Install test dependencies
        run: |
          pip install .[test]

      # Step 5: Run unit tests
      - name: Run unittests
        run: |
          python -m unittest discover -s tests -p "test_*.py"

      # Step 6: Run pytest (optional, if you have pytest-based tests)
      - name: Run pytest
        run: |
          python -m pytest tests || true
