name: Python Unit Tests with Debugging

on:
  push:
    branches:
      - 315-Unittest-via-Github-actions
  pull_request:
    branches:
      - 315-Unittest-via-Github-actions

jobs:
  run-tests:
    name: Run Unit Tests Across Python Versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        test-engine: ["PYTEST", "UNITTEST"]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Create .env File from .env.filip.EXAMPLE
      - name: Create .env File
        run: cp .env.filip.EXAMPLE .env.filip

      # Step 3: Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [[ -f requirements.txt ]]; then pip install -r requirements.txt; fi
          if [[ -f setup.py ]]; then pip install -e .; fi

      # Step 5: Verify Directory Structure
      - name: Verify Directory Structure
        run: |
          echo "Listing files to verify directory structure:"
          ls -R ${GITHUB_WORKSPACE}

      # Step 6: Run Tests
      - name: Run Tests
        run: |
          TEST_PATH="${{ github.workspace }}/FiLiP/tests"
          echo "Testing path: $TEST_PATH"
          if [ "${{ matrix.test-engine }}" == "PYTEST" ]; then 
            python -m pytest $TEST_PATH/; 
          else 
            python -m unittest discover --verbose $TEST_PATH "test_*.py"; 
          fi
