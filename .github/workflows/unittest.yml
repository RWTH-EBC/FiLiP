name: Python Unit Tests with Debugging

on:
  push:
    branches:
      - 315-Unittest-via-Github-actions
  pull_request:
    branches:
      - 315-Unittest-via-Github-actions

jobs:
  run-tests:
    name: Run Unit Tests Across Python Versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        test-engine: ["PYTEST", "UNITTEST"]

    continue-on-error: true
    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Step 3: Verify Python Version
    - name: Verify Python Version
      run: |
        python --version || true
        pip --version || true

    # Step 4: Install Dependencies
    - name: Install Dependencies
      continue-on-error: true
      run: |
        pip install --upgrade pip || true
        pip install -e . || true

    # Step 5: Create Test Environment
    - name: Create .env File
      continue-on-error: true
      run: |
        echo "LOG_LEVEL=INFO" >> FiLiP/tests/.env || true
        echo "CB_URL=http://localhost:1026" >> FiLiP/tests/.env || true
        echo "IOTA_JSON_URL=http://localhost:4041" >> FiLiP/tests/.env || true
        echo "IOTA_UL_URL=http://localhost:4061" >> FiLiP/tests/.env || true
        echo "QL_URL=http://localhost:8668" >> FiLiP/tests/.env || true
        echo "MQTT_BROKER_URL=mqtt://localhost:1883" >> FiLiP/tests/.env || true
        echo "FIWARE_SERVICE=filip" >> FiLiP/tests/.env || true
        echo "FIWARE_SERVICEPATH=/testing" >> FiLiP/tests/.env || true

    # Step 6: Install Test Engine
    - name: Install Test Engine
      continue-on-error: true
      run: |
        if [ "${{ matrix.test-engine }}" == "PYTEST" ]; then
          pip install pytest || true;
        fi

    # Step 7: Run Tests
    - name: Run Tests
      continue-on-error: true
      run: |
        TEST_PATH="FiLiP/tests"
        if [ "${{ matrix.test-engine }}" == "PYTEST" ]; then 
          python -m pytest $TEST_PATH/ || true; 
        else 
          python -m unittest discover --verbose $TEST_PATH "test_*.py" || true; 
        fi
