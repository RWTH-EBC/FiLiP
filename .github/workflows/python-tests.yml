name: CI for FiLiP

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py', 'requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install dependencies
      run: |
        pip install --use-pep517 .[development]

    - name: Create .env file
      run: |
        echo "CB_URL=http://localhost:1026" > .env
        echo "LD_CB_URL=http://localhost:1027" >> .env
        echo "IOTA_URL=http://localhost:4041" >> .env
        echo "QL_URL=http://localhost:8668" >> .env
        echo "MQTT_BROKER_URL=mqtt://localhost:1883" >> .env

    - name: Verify environment setup
      run: |
        echo "Verifying .env file:"
        cat .env

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py', 'requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Install test dependencies
      run: |
        pip install --use-pep517 .[test]

    - name: Run unittests
      run: |
        python -m unittest discover -s tests -p "test_*.py"

    - name: Run pytest
      continue-on-error: true
      run: |
        python -m pytest tests

    - name: Generate coverage report
      run: |
        python -m coverage run -m pytest tests
        python -m coverage html

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-html
        path: htmlcov/
